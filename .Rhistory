cols_label(Artist= md("**Artist - Play Count**"))
claylists_top_songs %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10)
claylists_top_songs %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10)
claylists_top_songs <- claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10)
View(claylists)
claylists_top_songs <- claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10)
View(claylists_top_songs)
View(claylists)
claylists_top_artists <- claylists %>% group_by(year_month,Artist) %>%
summarise(top_artists=n()) %>%
arrange(desc(year_month),desc(top_artists)) %>% top_n(10)
claylists_top_artists %>%
gt::gt() %>% cols_merge(vars(Artist),vars(top_artists),pattern="{1} - {2}") %>%
cols_label(Artist= md("**Artist - Play Count**")) %>%
tab_options(stub_group.background.color = "lightblue",stub_group.font.size = 20)
claylists %>% group_by(artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(top_songs)) %>% top_n(40) %>%
gt::gt() %>% cols_merge(vars(artist_song),vars(top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**"))
claylists %>% group_by(Artist) %>%
summarise(top_songs=n()) %>%
arrange(desc(top_songs)) %>% top_n(40) %>%
gt::gt() %>% cols_merge(vars(Artist),vars(top_songs),pattern="{1} - {2}") %>%
cols_label(Artist= md("**Artist - Play Count**"))
claylists_top_songs <- claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10)
claylists_top_songs %>%
gt::gt() %>% cols_merge(vars(artist_song),vars(top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cells_styles(text_weight = "bold"),locations=cells_group(groups="year_month"))
claylists <- claylists %>%
# limit to last 3 whole months
filter(AirDate<floor_date(Sys.Date(),unit="months")) %>%
filter(AirDate>floor_date(Sys.Date()-90,unit="months")) %>%
mutate(year_month=as.yearmon(AirDate)) %>%
group_by(year_month,ArtistToken,artist_song)
claylists <- ungroup(claylists)
claylists <- claylists %>%
# limit to last 3 whole months
filter(AirDate<floor_date(Sys.Date(),unit="months")) %>%
filter(AirDate>floor_date(Sys.Date()-90,unit="months")) %>%
mutate(year_month=as.yearmon(AirDate)) %>%
group_by(year_month,ArtistToken,artist_song)
claylists_top_songs <- claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10)
claylists_top_songs %>%
gt::gt() %>% cols_merge(vars(artist_song),vars(top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cells_styles(text_weight = "bold"),locations=cells_group(groups="year_month"))
claylists_top_artists <- claylists %>% group_by(year_month,Artist) %>%
summarise(top_artists=n()) %>%
arrange(desc(year_month),desc(top_artists)) %>% top_n(10)
claylists_top_artists %>%
gt::gt() %>% cols_merge(vars(Artist),vars(top_artists),pattern="{1} - {2}") %>%
cols_label(Artist= md("**Artist - Play Count**")) %>%
tab_options(stub_group.background.color = "lightblue",stub_group.font.size = 20)
claylists <- playlists %>% filter(DJ=="WA") %>% mutate(artist_song = paste(ArtistToken,Title,sep=" - "))
claylists_top_artists <- claylists %>% group_by(year_month,Artist) %>%
# limit to last 3 whole months
filter(AirDate>floor_date(Sys.Date()-90,unit="months")) %>%
summarise(top_artists=n()) %>%
arrange(desc(year_month),desc(top_artists)) %>% top_n(10)
claylists <- playlists %>% filter(DJ=="WA") %>% mutate(artist_song = paste(ArtistToken,Title,sep=" - "))
claylists <- ungroup(claylists)
claylists <- claylists %>%
# limit to last 3 whole months
filter(AirDate<floor_date(Sys.Date(),unit="months")) %>%
mutate(year_month=as.yearmon(AirDate)) %>%
group_by(year_month,ArtistToken,artist_song)
claylists_top_songs <- claylists %>%
# limit to last 3 whole months
filter(AirDate>floor_date(Sys.Date()-90,unit="months")) %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10)
claylists_top_songs <- claylists %>%
# limit to last 3 whole months
filter(AirDate>floor_date(Sys.Date()-90,unit="months")) %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10)
claylists_top_songs %>%
gt::gt() %>% cols_merge(vars(artist_song),vars(top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cells_styles(text_weight = "bold"),locations=cells_group(groups="year_month"))
claylists <- ungroup(claylists)
claylists <- claylists %>%
filter(AirDate<floor_date(Sys.Date(),unit="months")) %>%
mutate(year_month=as.yearmon(AirDate))
claylists_top_songs <- claylists %>%
# limit to last 3 whole months
filter(AirDate>floor_date(Sys.Date()-90,unit="months")) %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10)
claylists_top_songs %>%
gt::gt() %>% cols_merge(vars(artist_song),vars(top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cells_styles(text_weight = "bold"),locations=cells_group(groups="year_month"))
claylists_top_artists <- claylists %>%
# limit to last 3 whole months
filter(AirDate>floor_date(Sys.Date()-90,unit="months")) %>%
group_by(year_month,Artist) %>%
summarise(top_artists=n()) %>%
arrange(desc(year_month),desc(top_artists)) %>% top_n(10)
claylists_top_artists %>%
gt::gt() %>% cols_merge(vars(Artist),vars(top_artists),pattern="{1} - {2}") %>%
cols_label(Artist= md("**Artist - Play Count**")) %>%
tab_options(stub_group.background.color = "lightblue",stub_group.font.size = 20)
View(claylists)
View(claylists)
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
summarise(unique_songs=n())
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
summarise(n=n()) %>%
summarise(unique_songs=sum(n))
summarise(unique_songs=n()
)
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
summarise(n=n())
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
distinct() %>%
summarise(n=n())
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
distinct()
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
summarise(count=n())
summarise(count=n()
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
summarise(count=n()) %>%
summarise(count=n())
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
summarise(count=n()) %>%
summarise(count=sum(n))
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
summarise(count=n()) %>%
summarise(count=sum(count))
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
summarise(count=n()) %>%
summarise(count=n())
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
ggplot(aes(year_month,count)) + geom_line()
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
mutate(Airdate = as.Date(year_month)) %>%
ggplot(aes(AirDate,count)) + geom_line()
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
mutate(Airdate = as.Date(year_month))
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
mutate(Airdate = as.Date(year_month)) %>%
ggplot(aes(Airdate,count)) + geom_line()
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
mutate(Airdate = as.Date(year_month)) %>%
ggplot(aes(Airdate,count)) + geom_line() +
labs(title="Clay Pigeon - Song Diversity",
y = "Unique Songs")
#uniqueness
claylists %>% group_by(year_month,artist) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
mutate(Airdate = as.Date(year_month)) %>%
ggplot(aes(Airdate,count)) + geom_line() +
labs(title="Clay Pigeon - Artist Diversity",
y = "Unique Artists")
#uniqueness
claylists %>% group_by(year_month,Artist) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
mutate(Airdate = as.Date(year_month)) %>%
ggplot(aes(Airdate,count)) + geom_line() +
labs(title="Clay Pigeon - Artist Diversity",
y = "Unique Artists")
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
mutate(Air_Month = as.Date(year_month)) %>%
ggplot(aes(Air_Month,count)) + geom_line() +
labs(title="Clay Pigeon - Song Diversity",
y = "Unique Songs")
#uniqueness
claylists %>% group_by(year_month,Artist) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
mutate(Air_Month = as.Date(year_month)) %>%
ggplot(aes(Air_Month,count)) + geom_line() +
labs(title="Clay Pigeon - Artist Diversity",
y = "Unique Artists")
#uniqueness
claylists %>% group_by(year_month,Artist) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
mutate(Air_Month = as.Date(year_month))
#uniqueness
claylists %>% group_by(year_month,Artist) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
mutate(Air_Month = as.Date(year_month) %>%
ggplot(aes(Air_Month,count)) + geom_line() +
labs(title="Clay Pigeon - Artist Diversity",
y = "Unique Artists")
#uniqueness
claylists %>% group_by(year_month,Artist) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
mutate(Air_Month = as.Date(year_month) %>%
ggplot(aes(Air_Month,count)) + geom_line() +
labs(title="Clay Pigeon - Artist Diversity",
y = "Unique Artists")
#uniqueness
claylists %>% group_by(year_month,Artist) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
mutate(Air_Month = as.Date(year_month)) %>%
ggplot(aes(Air_Month,count)) + geom_line() +
labs(title="Clay Pigeon - Artist Diversity",
y = "Unique Artists")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(lubridate)
library(xts)
library(knitr)
library(remotes)
library(gt)
load(file='playlists.rdata')
source('~/R Projects/wfmu/1 - scrape_playlists.R')
warnings()
source('~/R Projects/wfmu/2 - clean_playlists.r')
source('~/R Projects/wfmu/3 - precalc_similiarity.r')
source('~/R Projects/wfmu/4 - copy files to shiny side.R')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(lubridate)
library(xts)
library(knitr)
library(remotes)
library(gt)
load(file='playlists.rdata')
claylists <- playlists %>% filter(DJ=="WA") %>% mutate(artist_song = paste(ArtistToken,Title,sep=" - "))
write_csv(claylists,"claylists.csv")
claylists <- ungroup(claylists)
claylists <- claylists %>%
filter(AirDate<floor_date(Sys.Date(),unit="months")) %>%
mutate(year_month=as.yearmon(AirDate))
claylists_top_songs <- claylists %>%
# limit to last 3 whole months
filter(AirDate>floor_date(Sys.Date()-90,unit="months")) %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10)
claylists_top_songs %>%
gt::gt() %>% cols_merge(vars(artist_song),vars(top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cells_styles(text_weight = "bold"),locations=cells_group(groups="year_month")) %>%
tab_options(stub_group.background.color = "lightblue",stub_group.font.size = 20)
claylists_top_artists <- claylists %>%
# limit to last 3 whole months
filter(AirDate>floor_date(Sys.Date()-90,unit="months")) %>%
group_by(year_month,Artist) %>%
summarise(top_artists=n()) %>%
arrange(desc(year_month),desc(top_artists)) %>% top_n(10)
claylists_top_artists %>%
gt::gt() %>% cols_merge(vars(Artist),vars(top_artists),pattern="{1} - {2}") %>%
cols_label(Artist= md("**Artist - Play Count**")) %>%
tab_options(stub_group.background.color = "lightblue",stub_group.font.size = 20)
claylists %>% group_by(artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(top_songs)) %>% top_n(40) %>%
gt::gt() %>% cols_merge(vars(artist_song),vars(top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**"))
claylists %>% group_by(Artist) %>%
summarise(top_songs=n()) %>%
arrange(desc(top_songs)) %>% top_n(40) %>%
gt::gt() %>% cols_merge(vars(Artist),vars(top_songs),pattern="{1} - {2}") %>%
cols_label(Artist= md("**Artist - Play Count**"))
#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
mutate(Air_Month = as.Date(year_month)) %>%
ggplot(aes(Air_Month,count)) + geom_line() +
labs(title="Clay Pigeon - Song Diversity",
y = "Unique Songs")
#uniqueness
claylists %>% group_by(year_month,Artist) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
mutate(Air_Month = as.Date(year_month)) %>%
ggplot(aes(Air_Month,count)) + geom_line() +
labs(title="Clay Pigeon - Artist Diversity",
y = "Unique Artists")
install.packages("GGally")
install.packages("recipes")
library(ggplot2)
library(GGally)
library(stringr)
library(tidyverse)
library(lubridate)
library(knitr)
library(xts)
library(rvest)
library(class) #k-nn
library(gmodels) #CrossTable
library(e1071) #naiveBayes
# function to mutate only rows meeting a certain condition
#most useful enhancement to dplyr ever!
mutate_cond <- function(.data, condition, ..., envir = parent.frame()) {
condition <- eval(substitute(condition), .data, envir)
condition[is.na(condition)] = FALSE
.data[condition, ] <- .data[condition, ] %>% mutate(...)
.data
}
load("playlists.rdata")
year_count<-playlists %>%
ungroup() %>%
transmute(Year_count=year(AirDate)) %>%
distinct() %>% nrow()
dj_count<-playlists %>% group_by(DJ) %>% summarise(DJs=n()) %>% nrow #DJs
show_count<-playlists %>% group_by(DJ,AirDate) %>% summarise(Shows=n()) %>% nrow()
#Artists
artist_count<-playlists %>% ungroup() %>% select(ArtistToken) %>% distinct() %>% nrow()
#songs
song_count<-playlists %>% ungroup() %>% select(ArtistToken,Title) %>% distinct() %>% nrow()
spins_count<-nrow(playlists) # spins
the_numbers<-data_frame(
Count=c(year_count,dj_count,show_count,artist_count,song_count,spins_count),
Stat=c("Years","DJs","Shows","Artists","Songs","Spins"))
the_numbers %>%
kable(caption="WFMU Archives by the Numbers",
col.names=c('WFMU',' Archives by the Numbers'),
format.args = list(big.mark=","))
#few playlists before 2002
cutoff_date<-as.Date("2002-01-01")
dead_artist_plays<-playlists %>%
ungroup() %>%
filter(AirDate > cutoff_date) %>%
filter(ArtistToken=="Prince") %>%
mutate(AirDate=as.yearqtr(AirDate)) %>%
group_by(AirDate) %>%
summarise(Spins=n()) %>%
arrange(AirDate)
gg<-dead_artist_plays %>% ggplot(aes(x=AirDate,y=Spins))+geom_col()
gg<-gg+scale_x_continuous()
gg<-gg+labs(y="Spins per Quarter",title="Dead Artist Effect: Prince")
gg
gg_play_freq<-function(artists,cutoff_date=Sys.Date()-(365*5)){
artist_plays<-playlists %>%
ungroup() %>%
filter(AirDate > cutoff_date) %>%
filter(ArtistToken %in% artists) %>%
mutate(AirDate=as.yearqtr(AirDate))  %>%
group_by(DJ,ArtistToken,AirDate) %>%
summarise(Spins=n()) %>%
arrange(AirDate) %>%
{.}
gg<-artist_plays %>% ggplot(aes(x=AirDate,y=Spins))
gg<-gg+geom_col()+facet_wrap(~ArtistToken)
gg<-gg+scale_x_continuous(breaks=seq(year(cutoff_date),year(Sys.Date()),by=2))
gg<-gg+ggtitle("Dead Artist Effect")
gg
}
cutoff_date<-as.Date("2008-01-01")
dead_artists=c('David Bowie','Prince','Chuck Berry','Lesley Gore')
gg_play_freq(dead_artists,cutoff_date)
play_count<-playlists %>%
ungroup() %>%
mutate(AirDate=as.yearqtr(AirDate))  %>%
group_by(ArtistToken,AirDate) %>%
summarise(Spins=n()) %>%
mutate(avg=mean(Spins),sd=sd(Spins)) %>%
filter(!is.na(sd)) %>%
mutate(z_score=(Spins-avg)/sd) %>%
filter(!is.na(z_score)) %>%
select(-avg,-sd)
play_count_z<- play_count %>%
group_by(ArtistToken) %>%
summarize(z_score=max(z_score)) %>%
left_join(play_count)
#rm(play_count) #This is a 400 thousand-long table that we don't need any more.
head(play_count_z)
play_count_z %>%
filter(ArtistToken %in% dead_artists)
play_count_z %>%
filter(z_score<6.5 ) %>%
filter(z_score>5.5 ) %>%
filter(ArtistToken=)
play_count_z %>%
filter(z_score<6.5 ) %>%
filter(z_score>5.5 )
cutoff_date<-as.Date("2001-01-01")
artists<-c("Band","BobbyWomack","EttaJames","Bjork")
gg_play_freq(artists,cutoff_date)
gg_play_freq_dj<-function(artists,cutoff_date=Sys.Date()-(365*5)){
artist_plays<-playlists %>%
ungroup() %>%
filter(AirDate > cutoff_date) %>%
filter(ArtistToken %in% artists) %>%
mutate(AirDate=as.yearqtr(AirDate))  %>%
group_by(DJ,ArtistToken,AirDate) %>%
summarise(Spins=n()) %>%
arrange(AirDate)
gg<-artist_plays %>% ggplot(aes(x=AirDate,y=Spins,fill=DJ))
gg<-gg+geom_col()+facet_wrap(~ArtistToken)
gg<-gg+scale_x_continuous(breaks=seq(year(cutoff_date),year(Sys.Date()),by=2))
gg<-gg+ggtitle("Dead Artist Effect")+theme(legend.position = "none")
gg
}
dead_artists %>% gg_play_freq_dj()
cutoff_date<-(as.Date("2002-01-01"))
not_dead_artists<-c(not_dead_artists,"Bjork")
cutoff_date<-as.Date("2001-01-01")
not_dead_artists<-c("Elo","Dictators","Residents")
gg_play_freq(not_dead_artists,cutoff_date)
cutoff_date<-(as.Date("2002-01-01"))
not_dead_artists<-c(not_dead_artists,"Bjork")
not_dead_artists %>% gg_play_freq_dj(cutoff_date)
#find DJ play diversity
dj_counts<-playlists %>%
ungroup() %>%
mutate(AirDate=as.yearqtr(AirDate))  %>%
group_by(ArtistToken,AirDate,DJ) %>%
summarise(Spins=n()) %>%
summarise(dj_count=n()) %>%
group_by(ArtistToken) %>%
mutate(avg_dj_count=mean(dj_count)) %>%
mutate(dj_multiple=dj_count/avg_dj_count) %>%
select(ArtistToken,AirDate,dj_count,dj_multiple) %>%
{.}
play_count_z2<- play_count_z %>%
select(ArtistToken,AirDate,z_score) %>%
left_join(dj_counts)
play_count<-play_count %>%
left_join(dj_counts)
head(play_count_z2)
# find fraction of plays in a quarter from one DJ
max_dj_counts<-playlists %>%
ungroup() %>%
mutate(AirDate=as.yearqtr(AirDate))  %>%
group_by(ArtistToken,AirDate,DJ) %>%
summarise(Spins=n()) %>%
mutate(spin_count=sum(Spins)) %>%
top_n(1,Spins) %>%
mutate(dj_concentration=Spins/spin_count) %>%
ungroup() %>%
select(AirDate,ArtistToken,dj_concentration) %>%
unique() %>%
{.}
play_count_z2<- play_count_z2 %>%
left_join(max_dj_counts) %>%
unique()
play_count<-play_count %>%
left_join(max_dj_counts)
load("~/R/wfmu/deaths.rdata")
View(deaths)
getwd()
here::dr_here()
usethis::create_project("playlist_death")
usethis::create_project("~/playlist_death")
getwd
getwd()
dir()
dir("/"
)
dir(".")
dir("..")
View(deaths)
usethis::create_project("../playlist_death")
