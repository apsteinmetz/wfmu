djPage
html_nodes(djPage,"table")
html_attrs(djPage)
?html_attrs()
html_nodes(djPage,"table")
html_nodes(djPage,"table border")
html_nodes(djPage,"table")
debugSource('~/R/wfmu/scrapeplaylists.R')
library(xml2)
library(rvest)
#actual work. testing above
# ----------------------------------------------
allDJURLs <-"http://wfmu.org/playlists"
playListRaw<- html(allDJURLs)
playListRaw<- html(allDJURLs)
# get the urls of the each DJs RSS playlist feed
t<-html_nodes(playListRaw,"ul")[2] %>% html_nodes(xpath='//a[contains(.,"Playlists")]')  %>% html_attr(name="href")
t
DJURLs<-paste("http://wfmu.org",t,sep="")[-1]
#--------------------------------------------------------------------------
#get all playlists for a DJ
# TROUBLE all play list tables are not the same. Headers might not match
getPlaylist <- function(plURL,dj) {
playlist = data.frame()
for (i in 1:length(plURL)) {
print(paste(dj,i))
# first two columns contain artist and track name, leave the rest
temp <- (html(plURL[i])%>%html_node(xpath="//table[2]")%>%html_table(fill=TRUE))
# try to correct tables without headers
if (names(temp)[1]=="X1") {
names(temp)<- temp[1,]
temp <- temp[-1,]
}
# order of artist, track(or title) varies.   Fix it
if (dim(temp)[2]>1) {  #ignore single column playlists
if (names(temp)[1]=="Artist") {
playlist<-rbind(playlist,cbind(dj,temp["Artist"],Track=temp[,2]))
}
else {
playlist<-rbind(playlist,cbind(dj,temp["Artist"],Track=temp[,1]))
}
}
}
return(playlist)
}
# #---------------------------------------------------
# get the URLs of the playlists for a DJ
allDJPlayLists = data.frame()
DJKey = data.frame()
DJURLs
for (n in 1:length(DJURLs)) {
singleDJ<- html(DJURLs[n])
playlistURL<-html_nodes(singleDJ,xpath = "//guid") %>%html_text()
showName <- html_node(singleDJ,"title")%>%html_text()
showName <- sub("WFMU's recent playlists from ","",showName)
DJ <- sub(".xml","",sub("http://wfmu.org/playlistfeed/","",DJURLs[n]))
DJKey<-rbind(DJKey,data.frame(DJ=DJ,ShowName=showName))
allDJPlayLists = rbind(allDJPlayLists, getPlaylist(plURL = playlistURL,dj = DJ))
}
View(allDJPlayLists)
i
dj
plURL
print(paste(dj,i))
# first two columns contain artist and track name, leave the rest
temp <- (html(plURL[i])%>%html_node(xpath="//table[2]")%>%html_table(fill=TRUE))
plURL[i]
temp
t
t <- (html(plURL[i])
)
t
html_node(xpath="//table[1]")%>%html_table(fill=TRUE))
html_node(xpath="//table[2]")%>%html_table(fill=TRUE))
html_node(xpath="//table[3]")%>%html_table(fill=TRUE))
html_node(xpath="//table[1]")%>%html_table(fill=TRUE)
html_node(xpath="//table[2]")%>%html_table(fill=TRUE)
html_node(xpath="//table[2]")
html_node(xpath="//table[1]")
html_node(xpath="//table[3]")
html_node(t,xpath="//table[2]")%>%html_table(fill=TRUE)
html_node(t,xpath="//table[1]")%>%html_table(fill=TRUE)
html_node(t,xpath="//table[3]")%>%html_table(fill=TRUE)
html_node(t,xpath="//table[4]")%>%html_table(fill=TRUE)
html_node(t,xpath="//table[4]")
html_node(t,xpath="//table[1]")
html_node(t,xpath="//table[2]")
html_node(t,xpath="//table[3]")
html_node(t,xpath="//table[4]")
html_node(t,xpath="//table[5]")
html_node(t,xpath="//table")
html_node(t,"table")
t
html_node(t,"table")
html_node(t,"tbody")
html_node(t,xpath="//tbody")
html_node(t,xpath="//tbody[1]")
html_node(t,xpath="//tbody[2]")
html_node(t,xpath="//tbody[3]")
html_node(t,xpath="//tbody[4]")
html_node(t,"span")
html_node(t,xpath="//span")
html_node(t,xpath="//span[1]")
html_node(t,xpath="//span[2]")
html_node(t,xpath="//span[3]")
html_node(t,xpath="tbody")
html_node(t,xpath="//tbody")
?html_node
html_nodes(t,"table")
html_nodes(t,"table")[1]
html_nodes(t,"table")[2]
html_nodes(t,"table")[2]%>%html_table()
html_nodes(t,"table")[2]%>%html_table(fill=TRUE)
t2<-html_nodes(t,"table")[2]%>%html_table(fill=TRUE)
temp<-html(plURL[i]%>%html_nodes(t,"table")[2]%>%html_table(fill=TRUE)
)
temp<-html(plURL[i])%>%html_nodes(t,"table")[2]%>%html_table(fill=TRUE)
t
temp<-html(plURL[i])%>%html_nodes("table")[2]%>%html_table(fill=TRUE)
temp<-html(plURL[i])%>%html_nodes("table")%>%.[2]%>%html_table(fill=TRUE)
temp
names(temp)
source('~/R/wfmu/scrapeplaylists.R')
temp
temp<-html(plURL[i]%>%html_nodes(t,"table")[2]%>%html_table(fill=TRUE))
temp <- (html(plURL[i])%>%html_node(xpath="//table[2]")%>%html_table(fill=TRUE))
temp<-html(plURL[i])%>%html_nodes(t,"table")[2]%>%html_table(fill=TRUE)
t<-html(plURL[i])
t
html_nodes(t,"table")
temp<-html(plURL[i])%>%html_nodes(t,"table")%>%.[2]%>%html_table(fill=TRUE)
t<-html(plURL[i])%>%html_nodes(t,"table")
temp<-html(plURL[i])%>%html_nodes("table")%>%.[2]%>%html_table(fill=TRUE)
temp
temp<-html(plURL[i])%>%html_nodes("table")%>%.[2]%>%html_table(fill=TRUE)
temp
dj
n
allDJPlayLists = rbind(allDJPlayLists, getPlaylist(plURL = playlistURL,dj = DJ))
dj
DJ
playlistURL
playlistURL<-html_nodes(singleDJ,xpath = "//guid") %>%html_text()
showName <- html_node(singleDJ,"title")%>%html_text()
showName <- sub("WFMU's recent playlists from ","",showName)
DJ <- sub(".xml","",sub("http://wfmu.org/playlistfeed/","",DJURLs[n]))
DJKey<-rbind(DJKey,data.frame(DJ=DJ,ShowName=showName))
DJ
allDJPlayLists = rbind(allDJPlayLists, getPlaylist(plURL = playlistURL,dj = DJ))
dj
debugSource('~/R/wfmu/scrapeplaylists.R')
temp
temp
print(paste(dj,i))
debugSource('~/R/wfmu/scrapeplaylists.R')
temp
allDJPlayLists
allDJURLs <-"http://wfmu.org/playlists"
playListRaw<- html(allDJURLs)
library(rvest)
playListRaw<- html(allDJURLs)
# get the urls of the each DJs RSS playlist feed
t<-html_nodes(playListRaw,"ul")[2] %>% html_nodes(xpath='//a[contains(.,"Playlists")]')  %>% html_attr(name="href")
DJURLs<-paste("http://wfmu.org",t,sep="")[-1]
DJURLs
t<-html_nodes(playListRaw,"ul")[2] %>% html_nodes(xpath='//a[contains(.,"Playlists")]')  %>% html_attr(name="href")
t
t<-html_nodes(playListRaw,"ul")[2]
t
t<-html_nodes(playListRaw,"ul")[2]%>%html_nodes(xpath='//href')
t
t<-html_nodes(playListRaw,"ul")[2]%>%html_nodes(xpath='//a')
t
t<-html_nodes(playListRaw,"ul")[2]%>%html_nodes(xpath='//a href')
t<-html_nodes(playListRaw,"ul")[2]%>%html_nodes(xpath='//a')
t
head(t)
t<-html_nodes(playListRaw,"ul")[2] %>% html_nodes(xpath='//a[contains(.,"Playlists")]')  %>% html_attr(name="href")
t
t<-html_nodes(playListRaw,"ul")[2] %>% html_nodes(xpath='//span[contains(.,"KDBFavIcon")]')
t
t<-html_nodes(playListRaw,"ul")[2] %>% html_nodes(xpath='//span')
t
t<-html_nodes(playListRaw,"ul")[2] %>% html_nodes(xpath='//font')
t
t
?gsub
playlistURL
playlistURLs
DJURLs
gsub("feed","",DJURLs)
gsub("feed","s",DJURLs)
DJURLs
DJURLS<- gsub("playlistfeed","playlists",DJURLs)
DJURLS<- gsub(".XML","",DJURLs)
DJURLS
DJURLS<- gsub(".xml","",DJURLs)
DJURLS
DJURLS<- gsub("playlistfeed","playlists",DJURLs)
DJURLS
t
t<-html_nodes(playListRaw,"ul")[2] %>% html_nodes(xpath='//a[contains(.,"Playlists")]')  %>% html_attr(name="href")
t
DJURLs<-paste("http://wfmu.org",t,sep="")[-1]
DJURLS
rm(DJURLS)
DJURLs<-paste("http://wfmu.org",t,sep="")[-1]
# above got the RSS feed links but we want the longer list of shows.  Below modifies
# the URL to get the right link
DJURLs<- gsub("playlistfeed","playlists",DJURLs)
DJURLs<- gsub(".xml","",DJURLs)
DJURLs
allDJPlayLists = data.frame()
DJKey = data.frame()
n
singleDJ<- html(DJURLs[n])
singleDJ
DJURLs[1]
DJ <- sub("http://wfmu.org/playlists/","",DJURLs[n])
DJ
playlistURL<-html_nodes(singleDJ,xpath = "//guid") %>%html_text()
playlistURL
singleDJ
html_nodes(singleDJ,"a")
html_nodes(singleDJ,xpath='f//a[contains(.,"/playlists")]'
)
html_nodes(singleDJ,xpath='//a[contains(.,"/playlists")]'
)
html_nodes(singleDJ,xpath='//a[contains(.,"/playlists")]')
html_nodes(singleDJ,"a")
head(html_nodes(singleDJ,"a"))
html_nodes(singleDJ,xpath='//a[contains("href","/playlists")]')
html_nodes(singleDJ,xpath='//a[@href]')
html_nodes(singleDJ,xpath='//a[@href=/playlists]')
html_nodes(singleDJ,xpath='//a[contains(.,"href=/playlists"]')
html_nodes(singleDJ,xpath='//a[contains(.,"href=/playlists")]')
html_nodes(singleDJ,xpath='//a[@href="/playlists"]')
html_nodes(singleDJ,xpath='//a[@href="/playlists/"]')
html_nodes(singleDJ,xpath='//a[contains(@href="/playlists")]')
html_nodes(singleDJ,xpath='//a[contains(.,href="/playlists")]')
html_nodes(singleDJ,xpath='//a[contains(.,"href=/playlists")]')
html_nodes(singleDJ,xpath='//a[@href="/playlists/"]')
html_nodes(singleDJ,xpath='//a[@href="/playlists"]')
html_nodes(singleDJ,xpath='//div[@class="showlist"]')
pl<-html_nodes(singleDJ,xpath='//div[@class="showlist"]')
pl
showName <- html_node(singleDJ,"title")%>%html_text()
showName
showName <- sub("\nPlaylists and Archives for ","",showName)
showName
showName <- html_node(singleDJ,"title")%>%html_text()
showName <- sub("Playlists and Archives for ","",showName)
showName
gsub("\n",showName)
gsub("\n","",showName)
showName <- html_node(singleDJ,"title")%>%html_text()
showName <- gsub("\n","",sub("Playlists and Archives for ","",showName))
showName
pl
html_attrs(pl)
html_attr(pl,"href")
html_attr(pl,"href")
?html_attr
html_attr(pl,"a")
pl
html_attr(pl,"li")
pl<-html_node(singleDJ,xpath='//div[@class="showlist"]')
pl
html_text(pl)
basic <- html("<p class='a'><b>Bold text</b></p>")
p <- html_node(basic, "p")
p
# Can subset with numbers to extract children
p[[1]]
# Use html_attr to get attributes
html_attr(p, "class")
html_attr(pl,"href")
html_attrs(pl,"href")
pl
pl[1]
pl[[1]]
pl[10]
html_attrs(pl[10])
html_nodes(pl[10],"a")
html_attrs(pl)
html_nodes(singleDJ,"a")
head(html_nodes(singleDJ,"a"))
head(html_nodes(singleDJ,xpath="//a"))
html_nodes(singleDJ,xpath="//a")
html_nodes(singleDJ,xpath="//a")%>html_attr("href")
html_nodes(singleDJ,xpath="//a")%>%html_attr("href")
pl<-html_nodes(singleDJ,xpath="//a")%>%html_attr("href")
pl
tail(pl)
tail(pl,10)
tail(pl,20)
pl<-tail(pl,20)
pl
?in
"playlist"  in pl
str_detect(pl[1],,"playlist")
library("stringr")
str_detect(pl[1],"playlist")
str_detect(pl[2],"playlist")
pl
str_detect(pl[2],"Playlist")
pl[str_detect(pl,"Playlist")]
str_detect(pl,"Playlist")
allDJURLs
playlistURL<-paste(allDjURLs,"/shows", pl[str_detect(pl,"Playlist")])
playlistURL<-paste(allDJURLs,"/shows", pl[str_detect(pl,"Playlist")])
playlist
playlistURL
playlistURL<-paste(allDJURLs,"/shows", pl[str_detect(pl,"Playlist")],sep="")
playlistURL
pl<-html_nodes(singleDJ,xpath="//a")%>%html_attr("href")
playlistURL<-paste(allDJURLs,"/shows", pl[str_detect(pl,"Playlist")],sep="")
playlistURL
allDJArtists<-data.frame()
debugSource('~/R/wfmu/scrapeplaylists.R')
View(allDJArtists)
View(DJArtists)
View(allDJArtists)
View(DJKey)
View(DJKey)
View(DJArtists)
View(DJArtists)
View(DJArtists)
View(DJArtists)
View(DJKey)
View(allDJArtists)
save(allDJArtists)
save(allDJArtists,"allDJArtists.RData")
?save
save(allDJArtists,"allDJArtists.RData")
save(allDJArtists,file="allDJArtists.RData")
save(allDJArtists,file="allDJArtists.RData")
View(DJArtists)
debugSource('~/R/wfmu/scrapeplaylists.R')
View(allDJArtists)
source('~/R/wfmu/scrapeplaylists.R')
source('~/R/wfmu/scrapeplaylists.R')
source('~/R/wfmu/scrapeplaylists.R')
source('~/R/wfmu/scrapeplaylists.R')
?save
source('~/R/wfmu/scrapeplaylists.R')
View(allDJArtists)
DJ
DJURLs
library(stringr)
library(tm)
library("plyr")
library("ggplot2")
library("wordcloud")
library("RColorBrewer")
library("SnowballC")
library(sentiment)
load("allDJArtists.RData")
allDJArtists
head(allDJArtists)
filter(allDJArtists,artist=="")
filter(allDJArtists,artist!="")
allDJArtists <- filter(allDJArtists,artist!="")
save(allDJArtists,file="allDJArtists.RData")
head(allDJArtists)
?Corpus
?VectorSource
filter(allDJArtists,DJ=="FX")
filter(allDJArtists,DJ=="BK")
filter(allDJArtists,DJ=="TW")
filter(allDJArtists,DJ=="GK")
test<-filter(allDJArtists,DJ=="GK")
unlist(test[,2])
do.call("paste",c(test[,2]))
?paste
paste(test[,2],collapse=" ")
paste(test[,2],collapse=" ")
test[2]
test[2,]
test[2,2]
data.frame(allDJArtists,stringsAsFactors = FALSE)
allDJArtists<- data.frame(allDJArtists,stringsAsFactors = FALSE)
head(allDJArtists)
save(allDJArtists,file="allDJArtists.RData")
is(allDJArtists$DJ)
is(allDJArtists$artist)
as.character(allDJArtists$artist)
allDJArtists$artist<-as.character(allDJArtists$artist)
save(allDJArtists,file="allDJArtists.RData")
test<-filter(allDJArtists,DJ=="GK")
test[1]
findLongestWord <- function(listOfWords) {
len <-0
wlen <- 0
longWord = ""
#find longest word in a list
for (w in listOfWords) {
len <- str_length(w)
if (len >wlen) {
longWord=w
wlen <- len
}
}
return(longWord)
}
test[2,2]
test[2,3]
test[2,4]
test[3,2]
test[3,2]
test[4,2]
test
test[100,1]
test[1000,1]
test[1000,2]
test[1000,1]
filter(allDJArtists,artist=="!!!")
str_replace(allDJArtists$artist,"!!!","chkchkchk")
allDJArtists$artist<-str_replace(allDJArtists$artist,"!!!","chkchkchk")
head(allDJArtists)
allDJArtists$artist<-str_replace(allDJArtists$artist,"("," ")
allDJArtists$artist<-str_replace(allDJArtists$artist,"\("," ")
allDJArtists$artist<-str_replace(allDJArtists$artist,"/("," ")
allDJArtists$artist<-str_replace(allDJArtists$artist,"!"," ")
allDJArtists$artist<-str_replace(allDJArtists$artist,":"," ")
allDJArtists$artist<-str_replace(allDJArtists$artist,'"'," ")
allDJArtists$artist<-str_replace(allDJArtists$artist,"/"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'"'," ")
View(allDJArtists)
View(allDJArtists)
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"("," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\("," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\("," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\)"," ")
View(allDJArtists)
View(allDJArtists)
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"[+-]"," ")
View(allDJArtists)
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"[+-'.*]"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"[+-'\\.*]"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"[+-'\\.\\*]"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"[+-]"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"[+-*]"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"[+-\\*]"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"*"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\*"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\[*]"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\[*.]"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\[*.-]"," ")
View(allDJArtists)
View(allDJArtists)
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\[*.-']"," ")
View(allDJArtists)
View(allDJArtists)
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"[+-&]"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"[+-]"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\[&]"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\[&]"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\[&]"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\[']"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"'"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\&"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'[!:"/+-]'," ")
load("allDJArtists.RData")
allDJArtists$artist<-str_replace(allDJArtists$artist,"!!!","chkchkchk")
# now change some common punctuation to space
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\("," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\)"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\&"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'[!:"/+-]'," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'[!:"/+-*]'," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\*"," ")
test<-filter(allDJArtists,DJ=="GK")
test[1,2]
test
findLongestWord(test$artist[1])
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'\\['," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'\\]'," ")
test<-filter(allDJArtists,DJ=="GK")
test[1,2]
sentence<-test$artist[1]
len <-0
wlen <- 0
longWord = ""
listOfWords = word(sentence)
sentence
listOfWords
word(sentence)
sentence
sentences <- c("Jane saw a cat", "Jane sat down")
sentences <- c("Jane saw a cat", "Jane sat down")
sentences <- c("Jane saw a cat", "Jane sat down")
word(sentences)
word(sentences,1)
word(sentences,2)
word(sentences,-1)
word(sentences,1,-1)
word(sentences[1],1,-1)
str_split(sentence," ")
len <-0
wlen <- 0
longWord = ""
listOfWords = str_split(sentence," ")
listOfWords
for (w in listOfWords) {
len <- str_length(w)
if (len >wlen) {
longWord=w
wlen <- len
}
}
w
