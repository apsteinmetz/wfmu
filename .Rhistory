html_nodes(singleDJ,xpath="//a")%>html_attr("href")
html_nodes(singleDJ,xpath="//a")%>%html_attr("href")
pl<-html_nodes(singleDJ,xpath="//a")%>%html_attr("href")
pl
tail(pl)
tail(pl,10)
tail(pl,20)
pl<-tail(pl,20)
pl
?in
"playlist"  in pl
str_detect(pl[1],,"playlist")
library("stringr")
str_detect(pl[1],"playlist")
str_detect(pl[2],"playlist")
pl
str_detect(pl[2],"Playlist")
pl[str_detect(pl,"Playlist")]
str_detect(pl,"Playlist")
allDJURLs
playlistURL<-paste(allDjURLs,"/shows", pl[str_detect(pl,"Playlist")])
playlistURL<-paste(allDJURLs,"/shows", pl[str_detect(pl,"Playlist")])
playlist
playlistURL
playlistURL<-paste(allDJURLs,"/shows", pl[str_detect(pl,"Playlist")],sep="")
playlistURL
pl<-html_nodes(singleDJ,xpath="//a")%>%html_attr("href")
playlistURL<-paste(allDJURLs,"/shows", pl[str_detect(pl,"Playlist")],sep="")
playlistURL
allDJArtists<-data.frame()
debugSource('~/R/wfmu/scrapeplaylists.R')
View(allDJArtists)
View(DJArtists)
View(allDJArtists)
View(DJKey)
View(DJKey)
View(DJArtists)
View(DJArtists)
View(DJArtists)
View(DJArtists)
View(DJKey)
View(allDJArtists)
save(allDJArtists)
save(allDJArtists,"allDJArtists.RData")
?save
save(allDJArtists,"allDJArtists.RData")
save(allDJArtists,file="allDJArtists.RData")
save(allDJArtists,file="allDJArtists.RData")
View(DJArtists)
debugSource('~/R/wfmu/scrapeplaylists.R')
View(allDJArtists)
source('~/R/wfmu/scrapeplaylists.R')
source('~/R/wfmu/scrapeplaylists.R')
source('~/R/wfmu/scrapeplaylists.R')
source('~/R/wfmu/scrapeplaylists.R')
?save
load("djDocs.RData")
dim(djDocs)
djCorpus <- Corpus(VectorSource(djDocs$artists))
library(stringr)
library(tm)
library(dplyr)
library("ggplot2")
library("wordcloud")
library("RColorBrewer")
library("SnowballC")
djCorpus <- Corpus(VectorSource(djDocs$artists))
for (i in 1:length(djCorpus)) {
meta(djCorpus[[i]], tag="DJ") <- djDocs$DJ[i]
}
djtdm<-TermDocumentMatrix(djCorpus)
m <- as.matrix(djtdm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
load("allDJArtists.RData")
allDJArtists$artist<-str_replace(allDJArtists$artist,"!!!","chkchkchk")
# now change some common punctuation to space
#I'm sure there is a more elegant way to do this.
print("Stripping Punctuation")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\("," ")
library(stringr)
library(tm)
install.packages("stringi")
#
library(stringr)
allDJArtists$artist<-str_replace(allDJArtists$artist,"!!!","chkchkchk")
# now change some common punctuation to space
#I'm sure there is a more elegant way to do this.
print("Stripping Punctuation")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\("," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\)"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\*"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'\\['," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'\\]'," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'[!:"/+-,]'," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\'"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\&"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\."," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\#"," ")
allDJArtists$artist<-str_trim(allDJArtists$artist)
#did we create any null entries
allDJArtists<-filter(allDJArtists,artist!="")
#now some connecting words that might be spelled/used variantly
# first make all lower cast
print("Stripping ambiguous words")
allDJArtists$artist<-str_to_lower(allDJArtists$artist)
joinWords <- c("with","feat","featuring","vs","versus","and","the")
for (w in joinWords){
allDJArtists$artist<-str_replace_all(allDJArtists$artist,w," ")
}
View(allDJArtists)
print("Trying to make sense of artist names")
t<-str_split_fixed(allDJArtists$artist,pattern="[ ]+",n=3)[,1:2]
allDJArtists$artistToken2<-apply(t,MARGIN=1,FUN=paste,collapse="")
View(allDJArtists)
head(d, 10)
filter(allDJArtists,artistToken2=="rew")
adj <-allDJArtists
load("allDJArtists.RData")
View(adj)
allDJArtists$artist<-str_replace(allDJArtists$artist,"!!!","chkchkchk")
# now change some common punctuation to space
#I'm sure there is a more elegant way to do this.
print("Stripping Punctuation")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\("," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\)"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\*"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'\\['," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'\\]'," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'[!:"/+-,]'," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\'"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\&"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\."," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\#"," ")
allDJArtists$artist<-str_trim(allDJArtists$artist)
#did we create any null entries
allDJArtists<-filter(allDJArtists,artist!="")
#now some connecting words that might be spelled/used variantly
# first make all lower cast
print("Stripping ambiguous words")
allDJArtists$artist<-str_to_lower(allDJArtists$artist)
joinWords <- c("with ","feat ","featuring ","vs ","versus ","and ","the ")
for (w in joinWords){
allDJArtists$artist<-str_replace_all(allDJArtists$artist,w," ")
}
#maybe strip spaces and combine all artist Words
#combine first two words
print("Trying to make sense of artist names")
t<-str_split_fixed(allDJArtists$artist,pattern="[ ]+",n=3)[,1:2]
allDJArtists$artistToken2<-apply(t,MARGIN=1,FUN=paste,collapse="")
djDocs<-combineAllArtists()
combineAllArtists <- function(){
t<- data.frame()
for (dj in levels(allDJArtists$DJ)){
#put all words in string for each DJ
print("Creating artist documents")
print(dj)
t<-rbind(t,data.frame(DJ=dj,artists= allDJArtists%>%
filter(DJ==dj)%>%
select(artistToken2)%>%
unlist()%>%paste(collapse=" ")))
}
return(t)
}
djDocs<-combineAllArtists()
save(djDocs,"djDocs.RData")
save(djDocs,file="djDocs.RData")
djCorpus <- Corpus(VectorSource(djDocs$artists))
for (i in 1:length(djCorpus)) {
meta(djCorpus[[i]], tag="DJ") <- djDocs$DJ[i]
}
djtdm<-TermDocumentMatrix(djCorpus)
m <- as.matrix(djtdm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
test<allDJArtists$artist[6573]
test<=allDJArtists$artist[6573]
test<-allDJArtists$artist[6573]
test
str_split_fixed(test,pattern="[ ]+",n=3)[,1:2]
str_split_fixed(test,pattern="[ ]+",n=4)[,1:2]
str_split_fixed(test,pattern="[ ]+",n=4)[,1:2]
allDJArtists$artist<-str_trim(allDJArtists$artist)
test<-allDJArtists$artist[6573]
test
str_split_fixed(test,pattern="[ ]+",n=4)[,1:2]
allDJArtists<-filter(allDJArtists,artist!="")
#now some connecting words that might be spelled/used variantly
# first make all lower cast
combineTwoArtistWords()
combineTwoArtistWords <- function(){
# we replaced all punctuation with spaces
#maybe strip spaces and combine all artist Words
#combine first two words
print("Trying to make sense of artist names")
t<-str_split_fixed(allDJArtists$artist,pattern="[ ]+",n=3)[,1:2]
allDJArtists$artistToken2<-apply(t,MARGIN=1,FUN=paste,collapse="")
}
combineTwoArtistWords()
allDJArtists$artist[6573]
allDJArtists$artistToken2[6573]
library(stringr)
library(tm)
library(dplyr)
library("ggplot2")
library("wordcloud")
library("RColorBrewer")
library("SnowballC")
load("djDocs.RData")
View(djDocs)
head(d, 10)
djtdm<-TermDocumentMatrix(djCorpus)
djCorpus <- Corpus(VectorSource(djDocs$artists))
djtdm<-TermDocumentMatrix(djCorpus)
m <- as.matrix(djtdm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
View(allDJArtists)
load("allDJArtists.RData")
allDJArtists$artist<-str_replace(allDJArtists$artist,"!!!","chkchkchk")
# now change some common punctuation to space
#I'm sure there is a more elegant way to do this.
print("Stripping Punctuation")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\("," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\)"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\*"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'\\['," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'\\]'," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'[!:"/+-,]'," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\'"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\&"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\."," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\#"," ")
allDJArtists$artist<-str_trim(allDJArtists$artist)
#did we create any null entries
allDJArtists<-filter(allDJArtists,artist!="")
#now some connecting words that might be spelled/used variantly
# first make all lower cast
print("Stripping ambiguous words")
allDJArtists$artist<-str_to_lower(allDJArtists$artist)
joinWords <- c("with ","feat ","featuring ","vs ","versus ","and ","the ")
for (w in joinWords){
allDJArtists$artist<-str_replace_all(allDJArtists$artist,w," ")
}
allDJArtists$artist<-str_trim(allDJArtists$artist)
#combine first two words
print("Trying to make sense of artist names")
t<-str_split_fixed(allDJArtists$artist,pattern="[ ]+",n=3)[,1:2]
allDJArtists$artistToken2<-apply(t,MARGIN=1,FUN=paste,collapse="")
djDocs<-combineAllArtists()
combineArtistWords <- function(){
# we replaced all punctuation with spaces
#maybe strip spaces and combine all artist Words
artistToken1<-str_replace_all(allDJArtists$artist," ","")
}
combineTwoArtistWords <- function(){
# we replaced all punctuation with spaces
#maybe strip spaces and combine all artist Words
#combine first two words
print("Trying to make sense of artist names")
t<-str_split_fixed(allDJArtists$artist,pattern="[ ]+",n=3)[,1:2]
allDJArtists$artistToken2<-apply(t,MARGIN=1,FUN=paste,collapse="")
}
combineAllArtists <- function(){
t<- data.frame()
for (dj in levels(allDJArtists$DJ)){
#put all words in string for each DJ
print("Creating artist documents")
print(dj)
t<-rbind(t,data.frame(DJ=dj,artists= allDJArtists%>%
filter(DJ==dj)%>%
select(artistToken2)%>%
unlist()%>%paste(collapse=" ")))
}
return(t)
}
djDocs<-combineAllArtists()
save(djDocs,file="djDocs.RData")
load("djDocs.RData")
#docs <- data.frame(author=c("me","you"),texts=c("This is a text.", "This another one."))
djCorpus <- Corpus(VectorSource(djDocs$artists))
for (i in 1:length(djCorpus)) {
meta(djCorpus[[i]], tag="DJ") <- djDocs$DJ[i]
}
djdtm<-documentTermMatrix(djCorpus)
library(stringr)
library(tm)
library(dplyr)
library("ggplot2")
library("wordcloud")
library("RColorBrewer")
djtdm<-TermDocumentMatrix(djCorpus)
m <- as.matrix(djtdm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
dj
allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)%>%unique()
allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)
allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)%>%unique()
allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)
allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)%>%unique()
?unique
allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)
allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)%>%unique()%>%head()
allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)%>%head()
allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)%>%unique()%>%head(30)
allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)%>%head(30)
t<-allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)
t
is(t)
unique(t)
t==unique(t)
aristTokens<- data.frame()
for (dj in levels(allDJArtists$DJ)){
t<-allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)%>%unique()
artistTokens<-rbind(dj=dj,artistToken2=t)
}
View(artistTokens)
View(m)
View(djDocs)
View(d)
t
dj
artistTokens<-rbind(data.frame(dj=dj,artistToken2=t))
data.frame(dj=dj,artistToken2=t))
data.frame(dj=dj,artistToken2=t)
artistTokens<-rbind(artistTokens,data.frame(dj=dj,artistToken2=t))
aristTokens<- data.frame()
for (dj in levels(allDJArtists$DJ)){
t<-allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)%>%unique()
artistTokens<-rbind(artistTokens,data.frame(dj=dj,artistToken2=t))
}
artistTokens<-rbind(artistTokens,data.frame(dj=dj,artistToken2=t))
data.frame(dj=dj,artistToken2=t
)
data.frame(dj=dj,artistToken2=t)
dj
t
levels(DJ)
levels(allDJArtists$DJ)
filter(allDJArtists,DJ=="DC"
)
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'[!:"/+-,]'," ")
View(allDJArtists)
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\-"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\-"," ")
#did we create any null entries
allDJArtists<-filter(allDJArtists,artist!="")
t
length(t)
dim(t)
dj="GK"
t<-allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)%>%unique()
t
length(t)
dim(t)
nrow(t)
if (nrow(t) >0) artistTokens<-rbind(artistTokens,data.frame(dj=dj,artistToken2=t))
aristTokens<- data.frame()
for (dj in levels(allDJArtists$DJ)){
t<-allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)%>%unique()
if (nrow(t) >0) artistTokens<-rbind(artistTokens,data.frame(dj=dj,artistToken2=t))
}
aristTokens<- data.frame()
for (dj in levels(allDJArtists$DJ)){
print(dj)
t<-allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)%>%unique()
if (nrow(t) >0) artistTokens<-rbind(artistTokens,data.frame(dj=dj,artistToken2=t))
}
View(allDJPlayLists)
View(allDJArtists)
library(stringr)
library(tm)
library(dplyr)
library("ggplot2")
library("wordcloud")
library("RColorBrewer")
library("SnowballC")
load("allDJArtists.RData")
load("allDJArtists.RData")
# one artist is all punctuation so give !!! special treatment
allDJArtists$artist<-str_replace(allDJArtists$artist,"!!!","chkchkchk")
# now change some common punctuation to space
#I'm sure there is a more elegant way to do this.
print("Stripping Punctuation")
#allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\("," ")
#allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\)"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\*"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'\\['," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'\\]'," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'[!:"/+,]'," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\'"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\&"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\."," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\#"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\-"," ")
#remove parentheticals
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\(.*?\\)"
#did we create any null entries
allDJArtists<-filter(allDJArtists,artist!="")
#now some connecting words that might be spelled/used variantly
# first make all lower cast
print("Stripping ambiguous words")
allDJArtists$artist<-str_to_lower(allDJArtists$artist)
joinWords <- c("with ","feat ","featuring ","vs ","versus ","and ","the ")
for (w in joinWords){
allDJArtists$artist<-str_replace_all(allDJArtists$artist,w," ")
}
# strip leading/trailing whitespace
allDJArtists$artist<-str_trim(allDJArtists$artist)
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\(.*?\\)"
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\(.*?\\)")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\((.*)\\)")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\((.*)\\)","")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\(.*\\)","")
load("allDJArtists.RData")
View(allDJArtists)
levels(allDJArtists$DJ)
nrow(levels(allDJArtists$DJ))
length(levels(allDJArtists$DJ))
unique(allDJArtists$DJ)
length(unique(allDJArtists$DJ))
levels(as.factor(allDJArtists$DJ))
length(levels(as.factor(allDJArtists$DJ)))
length(levels(as.factor(as.character(allDJArtists$DJ))))
allDJArtists$DJ<-as.factor(as.character(allDJArtists$DJ))))
allDJArtists$DJ<-as.factor(as.character(allDJArtists$DJ))
load("allDJArtists.RData")
length(levels(as.factor(as.character(allDJArtists$DJ))))
length(levels(as.factor((allDJArtists$DJ))))
?levels
levels(allDJArtists$DJ)<-levels(as.factor(allDJArtists$DJ))
length(levels(as.factor((allDJArtists$DJ))))
levels(allDJArtists$DJ)<-levels(as.factor(as.character(allDJArtists$DJ)))
allDJArtists$DJ<af-(as.factor(as.character(allDJArtists$DJ))
?as.factor
allDJArtists$DJ<-as.factor(as.character(allDJArtists$DJ),ordered=TRUE)
allDJArtists$DJ<-factor(as.character(allDJArtists$DJ),ordered=TRUE)
load("allDJArtists.RData")
allDJArtists$DJ<-factor(as.character(allDJArtists$DJ),ordered=FALSE)
save(allDJArtists,file="allDJArtists.RData")
load("allDJArtists.RData")
View(allDJArtists)
levels(allDJArtists$DJ)
nrow(levels(allDJArtists$DJ))
length(levels(allDJArtists$DJ))
allDJArtists[str_detect(allDJArists$artist,'feat.'),]
allDJArtists[str_detect(allDJArtists$artist,'feat.'),]
allDJArtists[str_detect(allDJArtists$artist,'feat\\.'),]
allDJArtists[str_detect(allDJArtists$artist,'feat\\(.)'),]
allDJArtists[str_detect(allDJArtists$artist,'feat(\\.)'),]
View(allDJArtists)
View(allDJArtists)
# one artist is all punctuation so give !!! special treatment
allDJArtists$artist<-str_replace(allDJArtists$artist,"!!!","chkchkchk")
# now change some common punctuation to space
#I'm sure there is a more elegant way to do this.
print("Stripping Punctuation")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\*"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'\\['," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'\\]'," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,'[!:"/+,]'," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\'"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\&"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\."," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\#"," ")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\-"," ")
allDJArtists$artist<-str_to_lower(allDJArtists$artist)
# I choose to strip out the stuff below though dealing with it might get better analysis
#remove parentheticals
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"\\(.*\\)","")
# remove 'featuring' or 'with' artists
# I chose not to remove "Versus" because that is a band name
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"(feat |featuring |with |vs |vs\\.).+","")
allDJArtists$artist<-str_replace_all(allDJArtists$artist,"(live @ |live on|@).+","")
View(allDJArtists)
allDJArtists<-filter(allDJArtists,artist!="")
#now some connecting words that might be spelled/used variantly
# first make all lower cast
print("Stripping ambiguous words")
joinWords <- c("and ","the ")
print("Stripping filler words")
joinWords <- c("and ","the ")
for (w in joinWords){
allDJArtists$artist<-str_replace_all(allDJArtists$artist,w," ")
}
# strip leading/trailing whitespace
allDJArtists$artist<-str_trim(allDJArtists$artist)
print("Trying to make sense of artist names")
t<-str_split_fixed(allDJArtists$artist,pattern="[ ]+",n=3)[,1:2]
allDJArtists$artistToken2<-apply(t,MARGIN=1,FUN=paste,collapse="")
t
allDJArtists<-filter(allDJArtists,artist!="")
aristTokens<- data.frame()
for (dj in levels(allDJArtists$DJ)){
print(dj)
t<-allDJArtists%>%filter(DJ==dj)%>%select(artistToken2)%>%unique()
if (nrow(t) >0) artistTokens<-rbind(artistTokens,data.frame(dj=dj,artistToken2=t))
}
rm(m)
rm(v)
rm(djCorpus)
rm(djDocs)
rm(d)
rm(artistTokens)
View(playlist)
View(aristTokens)
rm(djtdm)
