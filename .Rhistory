#uniqueness
claylists %>% group_by(year_month,artist_song) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
mutate(Air_Month = as.Date(year_month)) %>%
ggplot(aes(Air_Month,count)) + geom_line() +
labs(title="Clay Pigeon - Song Diversity",
y = "Unique Songs")
#uniqueness
claylists %>% group_by(year_month,Artist) %>%
summarise(count=n()) %>%
summarise(count=n()) %>%
mutate(Air_Month = as.Date(year_month)) %>%
ggplot(aes(Air_Month,count)) + geom_line() +
labs(title="Clay Pigeon - Artist Diversity",
y = "Unique Artists")
source('~/R Projects/wfmu/1 - scrape_playlists.R')
#example way to restart if failure occurs in middle of list at,say dj "VR"
djList_temp<-djList[match("TW",djList):length(djList)]
djList_temp
#example way to restart if failure occurs in middle of list at,say dj "VR"
#djList_temp<-djList[match("TW",djList):length(djList)]
for (dj in djList_temp) {
plURLs <- playlistURLs %>%
filter(DJ == dj) %>%
rowid_to_column() %>%
select(playlistURL)
if (UPDATE_ONLY) {
go_back_num<- round(as.integer(Sys.Date() - filter(most_recent_dates,DJ==dj)$most_recent) * 5/7)
if (length(go_back_num) == 0) {
#this means dJ is not in playlist_raw so initiate an new DJ
go_back_num <- 100
}
print(paste("Updating ONLY last",go_back_num,"Shows"))
} else{
go_back_num<-nrow(plURLs)
}
for (n in 1:go_back_num){
plURL<-plURLs[min(n,nrow(plURLs)),1]
print(paste(dj, n, plURL,Sys.time()))
if (!is.na(pull(plURLs[1,1]))){
playlist<-get_playlist(plURL, dj)
playlists_raw <- bind_rows(playlists_raw, playlist)
}
if (is.null(playlist)) break #done with this DJ
}
#save to disk after each dj
save(playlists_raw,file="playlists_raw.rdata")
}
djlist
djList
#example way to restart if failure occurs in middle of list at,say dj "VR"
djList_temp<-djList[match("FU",djList):length(djList)]
djList
djList_temp
#example way to restart if failure occurs in middle of list at,say dj "VR"
djList_temp<-djList[match("GA",djList):length(djList)]
for (dj in djList_temp) {
plURLs <- playlistURLs %>%
filter(DJ == dj) %>%
rowid_to_column() %>%
select(playlistURL)
if (UPDATE_ONLY) {
go_back_num<- round(as.integer(Sys.Date() - filter(most_recent_dates,DJ==dj)$most_recent) * 5/7)
if (length(go_back_num) == 0) {
#this means dJ is not in playlist_raw so initiate an new DJ
go_back_num <- 100
}
print(paste("Updating ONLY last",go_back_num,"Shows"))
} else{
go_back_num<-nrow(plURLs)
}
for (n in 1:go_back_num){
plURL<-plURLs[min(n,nrow(plURLs)),1]
print(paste(dj, n, plURL,Sys.time()))
if (!is.na(pull(plURLs[1,1]))){
playlist<-get_playlist(plURL, dj)
playlists_raw <- bind_rows(playlists_raw, playlist)
}
if (is.null(playlist)) break #done with this DJ
}
#save to disk after each dj
save(playlists_raw,file="playlists_raw.rdata")
}
source('~/R Projects/wfmu/2 - clean_playlists.r')
install.packages(c("ineq", "xts"))
source('~/R Projects/wfmu/2 - clean_playlists.r')
install.packages(c("tm", "vegan"))
source('~/R Projects/wfmu/3 - precalc_similiarity.r')
source('~/R Projects/wfmu/4 - copy files to shiny side.R')
install.packages("ggthemes")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(lubridate)
library(xts)
library(knitr)
library(remotes)
library(gt)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(lubridate)
library(xts)
library(knitr)
library(remotes)
#library(gt)
load(file='playlists.rdata')
claylists <- playlists %>% filter(DJ=="WA") %>% mutate(artist_song = paste(ArtistToken,Title,sep=" - "))
write_csv(claylists,"claylists.csv")
claylists <- ungroup(claylists)
claylists <- claylists %>%
# limit to whole months
filter(AirDate<floor_date(Sys.Date(),unit="months")) %>%
mutate(year_month=as.yearmon(AirDate)) %>%
group_by(year_month,ArtistToken,artist_song)
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>% cols_merge(vars(artist_song),vars(top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cells_styles(text_weight = "bold"),locations=cells_group(groups="year_month"))
#library(gt)
devtools::install_github("rstudio/gt.git")
#library(gt)
devtools::install_github("rstudio/gt")
#devtools::install_github("rstudio/gt")
library(gt)
devtools::install_github("rstudio/gt")
install.packages("BH")
install.packages("BH")
version
devtools::install_github("rstudio/gt")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(lubridate)
library(xts)
library(knitr)
library(remotes)
#devtools::install_github("rstudio/gt")
library(gt)
load(file='playlists.rdata')
claylists <- playlists %>% filter(DJ=="WA") %>% mutate(artist_song = paste(ArtistToken,Title,sep=" - "))
write_csv(claylists,"claylists.csv")
claylists <- ungroup(claylists)
claylists <- claylists %>%
# limit to whole months
filter(AirDate<floor_date(Sys.Date(),unit="months")) %>%
mutate(year_month=as.yearmon(AirDate)) %>%
group_by(year_month,ArtistToken,artist_song)
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
#  gt::gt() %>%
cols_merge(vars(artist_song),vars(top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cells_styles(text_weight = "bold"),locations=cells_group(groups="year_month"))
devtools::install_github("daranzolin/ViewPipeSteps")
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song),vars(top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cells_styles(text_weight = "bold"),locations=cells_group(groups="year_month"))
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cells_styles(text_weight = "bold"),locations=cells_group(groups="year_month"))
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
#  cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
#  tab_style(cells_styles(text_weight = "bold"),locations=cells_group(groups="year_month")) %>%
{.}
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
#  tab_style(cells_styles(text_weight = "bold"),locations=cells_group(groups="year_month")) %>%
{.}
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cells_styles(text_weight = "bold"),locations=cells_group(groups="year_month")) %>%
{.}
claylists %>% group_by(year_month,Artist) %>%
summarise(top_artists=n()) %>%
arrange(desc(year_month),desc(top_artists)) %>% top_n(10) %>%
gt::gt() %>% cols_merge(vars(Artist),vars(top_artists),pattern="{1} - {2}") %>%
cols_label(Artist= md("**Artist - Play Count**")) %>%
tab_options(stub.background.color = "lightblue",stub.font.size = 20)
claylists %>% group_by(year_month,Artist) %>%
summarise(top_artists=n()) %>%
arrange(desc(year_month),desc(top_artists)) %>% top_n(10) %>%
gt::gt() %>% cols_merge(vars(Artist),vars(top_artists),pattern="{1} - {2}") %>%
cols_label(Artist= md("**Artist - Play Count**")) %>%
tab_options(stub.background.color = "lightblue",stub.font.size = 20)
claylists %>% group_by(year_month,Artist) %>%
summarise(top_artists=n()) %>%
arrange(desc(year_month),desc(top_artists)) %>% top_n(10) %>%
gt::gt() %>% cols_merge(vars(Artist),vars(top_artists),pattern="{1} - {2}") %>%
#  cols_label(Artist= md("**Artist - Play Count**")) %>%
#  tab_options(stub.background.color = "lightblue",stub.font.size = 20)
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
#  tab_style(cells_styles(text_weight = "bold"),locations=cells_group(groups="year_month")) %>%
{.}
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cells_styles(text_weight = "bold"),locations=cells_group(groups="year_month")) %>%
{.}
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cells_styles(text_weight = "bold"),
locations=cells_group(groups="year_month")) %>%
{.}
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
#  tab_style(cells_styles(text_weight = "bold"),
#            locations=cells_group(groups="year_month")) %>%
{.}
claylists <- playlists %>% filter(DJ=="WA") %>% mutate(artist_song = paste(ArtistToken,Title,sep=" - "))
write_csv(claylists,"claylists.csv")
claylists <- ungroup(claylists)
claylists <- claylists %>%
# limit to whole months
filter(AirDate<floor_date(Sys.Date(),unit="months")) %>%
mutate(year_month=as.yearmon(AirDate)) %>%
group_by(year_month,ArtistToken,artist_song)
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
#  tab_style(cells_styles(text_weight = "bold"),
#            locations=cells_group(groups="year_month")) %>%
{.}
claylists %>% group_by(year_month,Artist) %>%
summarise(top_artists=n()) %>%
arrange(desc(year_month),desc(top_artists)) %>% top_n(10) %>%
gt::gt() %>% cols_merge(vars(Artist,top_artists),pattern="{1} - {2}") %>%
cols_label(Artist= md("**Artist - Play Count**")) %>%
tab_options(stub_group.background.color = "lightblue",stub_group.font.size = 20)
claylists %>% group_by(year_month,Artist) %>%
summarise(top_artists=n()) %>%
arrange(desc(year_month),desc(top_artists)) %>% top_n(10) %>%
gt::gt() %>% cols_merge(vars(Artist,top_artists),pattern="{1} - {2}") %>%
cols_label(Artist= md("**Artist - Play Count**")) %>%
tab_options(stub.background.color = "lightblue",stub.font.size = 20)
claylists %>% group_by(year_month,Artist) %>%
summarise(top_artists=n()) %>%
arrange(desc(year_month),desc(top_artists)) %>% top_n(10) %>%
gt::gt() %>% cols_merge(vars(Artist,top_artists),pattern="{1} - {2}") %>%
cols_label(Artist= md("**Artist - Play Count**")) %>%
tab_options(stub.background.color = "lightblue",row_group.font.size = 20)
claylists %>% group_by(artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(top_songs)) %>% top_n(40) %>%
gt::gt() %>% cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**"))
claylists %>% group_by(Artist) %>%
summarise(top_songs=n()) %>%
arrange(desc(top_songs)) %>% top_n(40) %>%
gt::gt() %>% cols_merge(vars(Artist,top_songs),pattern="{1} - {2}") %>%
cols_label(Artist= md("**Artist - Play Count**"))
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
#  tab_style(cells_styles(text_weight = "bold"),
#            locations=cells_group()) %>%
{.}
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cells_styles(text_weight = "bold"),
locations=cells_group()) %>%
{.}
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(
locations=cells_group()) %>%
{.}
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cells_style(text_weight = "bold"),
locations=cells_group()) %>%
{.}
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cells_styles(text_weight = "bold"),
locations=cells_group()) %>%
{.}
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cell_style(text_weight = "bold"),
locations=cells_group()) %>%
{.}
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cells_style(text_weight = "bold"),
locations=cells_group()) %>%
{.}
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cell_text(text_weight = "bold"),
locations=cells_group()) %>%
{.}
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cell_text(weight = "bold"),
locations=cells_group()) %>%
{.}
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(cell_text(weight = "bold"),
cell_fill(color="lightcyan"),
locations=cells_group()) %>%
{.}
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(style=list(cell_text(weight = "bold"),
cell_fill(color = "lightcyan")),
locations=cells_group()) %>%
{.}
claylists %>% group_by(year_month,Artist) %>%
summarise(top_artists=n()) %>%
arrange(desc(year_month),desc(top_artists)) %>% top_n(10) %>%
gt::gt() %>% cols_merge(vars(Artist,top_artists),pattern="{1} - {2}") %>%
cols_label(Artist= md("**Artist - Play Count**")) %>%
tab_style(style=list(cell_text(weight = "bold"),
cell_fill(color = "lightcyan")),
locations=cells_group()) %>%
#  tab_options(stub.background.color = "lightblue",row_group.font.size = 20) %>%
{.}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(lubridate)
library(xts)
library(knitr)
library(remotes)
#devtools::install_github("rstudio/gt")
library(gt)
load(file='playlists.rdata')
claylists <- playlists %>% filter(DJ=="WA") %>% mutate(artist_song = paste(ArtistToken,Title,sep=" - "))
write_csv(claylists,"claylists.csv")
claylists <- ungroup(claylists)
claylists <- claylists %>%
# limit to whole months
filter(AirDate<floor_date(Sys.Date(),unit="months")) %>%
mutate(year_month=as.yearmon(AirDate)) %>%
group_by(year_month,ArtistToken,artist_song)
claylists %>%
group_by(year_month,artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(year_month),desc(top_songs)) %>% top_n(10) %>%
gt::gt() %>%
cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**")) %>%
tab_style(style=list(cell_text(weight = "bold"),
cell_fill(color = "lightcyan")),
locations=cells_group()) %>%
{.}
claylists %>% group_by(year_month,Artist) %>%
summarise(top_artists=n()) %>%
arrange(desc(year_month),desc(top_artists)) %>% top_n(10) %>%
gt::gt() %>% cols_merge(vars(Artist,top_artists),pattern="{1} - {2}") %>%
cols_label(Artist= md("**Artist - Play Count**")) %>%
tab_style(style=list(cell_text(weight = "bold"),
cell_fill(color = "lightcyan")),
locations=cells_group()) %>%
{.}
claylists %>% group_by(artist_song) %>%
summarise(top_songs=n()) %>%
arrange(desc(top_songs)) %>% top_n(40) %>%
gt::gt() %>% cols_merge(vars(artist_song,top_songs),pattern="{1} - {2}") %>%
cols_label(artist_song= md("**Artist - Song - Play Count**"))
claylists %>% group_by(Artist) %>%
summarise(top_songs=n()) %>%
arrange(desc(top_songs)) %>% top_n(40) %>%
gt::gt() %>% cols_merge(vars(Artist,top_songs),pattern="{1} - {2}") %>%
cols_label(Artist= md("**Artist - Play Count**"))
load("~/R Projects/wfmu/playlists.Rdata")
View(playlists)
load("~/R Projects/wfmu/playlists_full.Rdata")
library(tidyverse)
playlists_full <- playlists_full %>% mutate(yearmon = zoo::yearmon(AirDate))
playlists_full
playlists_full <- playlists_full %>% mutate(yearmon = zoo::yearmon(AirDate))
library(xts)
playlists_full <- playlists_full %>% mutate(yearmon = yearmon(AirDate))
yearmon("2012-01-01")
yearmon("2012-01-01")
playlists_full <- playlists_full %>% mutate(yearmon = as.yearmon(AirDate))
warnings
warnings()
View(playlists_full)
playlists_full
playlists_full <- playlists_full %>% mutate(yearmon = as.yearmon(as.character(AirDate)))
playlists_full
as.yearmon("2012-01-01")
as.yearmon(as.Date("2012-01-01"))
playlists_full
playlists_full[1,]
playlists_full[1,]$AirDate
as.yearmon(playlists_full[1,]$AirDate)
playlists_full <- playlists_full %>% mutate(yearmonth = as.yearmon(AirDate))
View(playlists_full)
warnings()
playlists_full$AirDate
as.yearmon(playlists_full$AirDate)
playlists_full$yearmonth <- as.yearmon(playlists_full$AirDate)
playlists_full %>% group_by(yearmonth) %>% tally()
playlists_full %>% group_by(yearmonth) %>% tally() %>% arrange(desc(n))
